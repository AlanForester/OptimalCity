# Техническое задание на разработку системы получения и отображения прогноза погоды

## Используемый стек и технологии

- Rails 8.0
- Ruby 3.4.5
- Postgres 17
- Tailwind
- NATS Server 2.11
- Docker 28.3
- RSpec
- Cucumber

## Описание задачи

### Внешнее отображение

Необходимо отображать на стартовой странице приложения прогноз погоды для городов **Москва** и **Санкт-Петербург** (задается настройками, это значения по умолчанию) в части показаний температуры воздуха для каждых 20 минут текущих суток.  
Например, в 8:01 на странице должны быть записи с 00:00 до 08:00 текущих суток с интервалом в 20 минут.  
Или если приложение запущено в 19:50, то в 21:43 должны быть записи с 20:00 до 21:40 и т.д.  
Внешнее оформление выполнить с использованием Tailwind CSS.

## Требования к реализации

Задача должна быть выполнена с разбиением на два сервиса:

- сервис запроса данных и отображения (**Rails**)
- сервис получения данных и хранения в сервере **NATS**

Сервисы должны быть реализованы независимо и запускаться отдельными контейнерами Docker в составе композа.

## Результаты выполнения

- репозиторий git
- файл docker-compose в репозитории
- тесты с покрытием не менее 60% кода

## Описание логики работы

Предполагается разработка простого одностраничного приложения с использованием Rails. Назовем его **«Отображалка»**.  
Второе приложение (сервис) разрабатывается на Ruby. Условное название — **«Получалка»**.

1. Запускается сервер NATS.
2. Запускается «Получалка», которая в цикле обращается к внешним API (gismeteo, yandex, weather и т.д.), предоставляющим данные о погоде, запрашивает данные раз в 20 минут для указанных в параметрах запуска (файле конфигурации yaml) городов и сохраняет их в сервере NATS, используя функциональность stream или bucket.
3. «Отображалка» обращается к сохранённым данным и отображает их на странице.
4. «Отображалка» не зависит от «Получалки», сервер NATS используется как шина обмена данными.

> **ВАЖНО!** Получение «исторических данных» не является целью данной задачи, вполне достаточно отображения данных, начиная с момента работы сервисов и заполнения данных каждые 20 минут работы.

## Порядок проверки и приемки работы

Работа считается выполненной при выполнении условий:

- запуск **одного** файла docker-compose
- отображение данных в «Отображалке» по истечении 2-х часов работы
- работоспособность юнит-тестов RSpec, которые должны проверять используемые методы в коде по существу их работы  
  (под этим понимается, что внесение ошибок в метод должно приводить к падению тестов)
- тесты Cucumber должны проверять открытие страницы в «Получалке» и отображение основных элементов
